{"version":3,"sources":["Auth.js","NavBar/NavBar.js","Questions/Questions.js","Question/SubmitAnswer.js","Question/Question.js","Callback.js","SecuredRoute/SecuredRoute.js","NewQuestion/NewQuestion.js","App.js","serviceWorker.js","index.js"],"names":["auth0Client","Auth","Object","classCallCheck","this","auth0","WebAuth","domain","audience","clientID","redirectUri","getUri","responseType","scope","getProfile","bind","handleAuthentication","isAuthenticated","signIn","signOut","profile","idToken","Date","getTime","expiresAt","authorize","_this","Promise","resolve","reject","parseHash","err","authResult","setSession","idTokenPayload","exp","logout","returnTo","_this2","checkSession","withRouter","props","react_default","a","createElement","className","Link","to","onClick","name","history","replace","Questions","possibleConstructorReturn","getPrototypeOf","call","state","questions","axios","get","data","setState","map","question","key","id","concat","answers","title","description","Component","SubmitAnswer","answer","value","submitAnswer","react","htmlFor","type","onChange","e","updateAnswer","target","placeholder","submit","Question","assertThisInitialized","refreshQuestion","params","match","questionId","post","_id","headers","Authorization","getIdToken","Question_SubmitAnswer","idx","Callback","SecuredRoute","component","path","checkingSession","Route","render","NewQuestion","disabled","push","onBlur","updateTitle","updateDescription","App","location","pathname","silentAuth","forceUpdate","_context","t0","error","console","log","NavBar_NavBar","exact","SecuredRoute_SecuredRoute","Boolean","window","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0fb3293c.chunk.js","sourcesContent":["import auth0 from \"auth0-js\";\r\n\r\nclass Auth {\r\n  constructor() {\r\n\r\n    this.auth0 = new auth0.WebAuth({\r\n      domain: \"tour-mapper.auth0.com\",\r\n      audience: \"https://tour-mapper.auth0.com/userinfo\",\r\n      clientID: \"LrUWUhZTWmwi0ire5GDCN3F4RUaxJJ62\",\r\n      redirectUri: this.getUri() + '/callback',\r\n      responseType: \"id_token\",\r\n      scope: \"openid profile\"\r\n    });\r\n\r\n    this.getProfile = this.getProfile.bind(this);\r\n    this.handleAuthentication = this.handleAuthentication.bind(this);\r\n    this.isAuthenticated = this.isAuthenticated.bind(this);\r\n    this.signIn = this.signIn.bind(this);\r\n    this.signOut = this.signOut.bind(this);\r\n  }\r\n\r\n  getUri(){\r\n    if (process.env.NODE_ENV === 'production'){\r\n      return 'https://tour-mapper.herokuapp.com'\r\n    }\r\n    else {\r\n      return 'http://localhost:3000'\r\n    }\r\n  }\r\n\r\n  getProfile() {\r\n    return this.profile;\r\n  }\r\n\r\n  getIdToken() {\r\n    return this.idToken;\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return new Date().getTime() < this.expiresAt;\r\n  }\r\n\r\n  signIn() {\r\n    this.auth0.authorize();\r\n  }\r\n\r\n  handleAuthentication() {\r\n    return new Promise((resolve, reject) => {\r\n      this.auth0.parseHash((err, authResult) => {\r\n        if (err) return reject(err);\r\n        if (!authResult || !authResult.idToken) {\r\n          return reject(err);\r\n        }\r\n        this.setSession(authResult);\r\n\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  setSession(authResult) {\r\n    this.idToken = authResult.idToken;\r\n    this.profile = authResult.idTokenPayload;\r\n    // Set the time that the id token will expire at\r\n    this.expiresAt = authResult.idTokenPayload.exp * 1000;\r\n  }\r\n\r\n  signOut() {\r\n    this.auth0.logout({\r\n        returnTo:this.getUri(), \r\n        clientID: 'LrUWUhZTWmwi0ire5GDCN3F4RUaxJJ62'\r\n    })\r\n  }\r\n\r\n  silentAuth(){\r\n      return new Promise((resolve, reject)=>{\r\n          this.auth0.checkSession({}, (err, authResult)=>{\r\n              if (err) return reject(err); \r\n              this.setSession(authResult);\r\n              resolve(); \r\n          })\r\n      })\r\n  }\r\n}\r\n\r\n// Singleton\r\nconst auth0Client = new Auth();\r\n\r\nexport default auth0Client;\r\n","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport auth0Client from '../Auth';\r\n\r\nfunction NavBar(props) {\r\n  const signOut = () => {\r\n    auth0Client.signOut(); \r\n    props.history.replace('/');\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-primary fixed-top\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Tour-Mapper\r\n      </Link>\r\n      {\r\n        !auth0Client.isAuthenticated() && \r\n        <button className=\"btn btn-dark\" onClick={auth0Client.signIn}>Sign In</button>\r\n      }\r\n      {\r\n        auth0Client.isAuthenticated() &&\r\n        <div>\r\n          <label className=\"mr-2 text-white\">{auth0Client.getProfile().name}</label>\r\n          <button className=\"btn btn-dark\" onClick={()=>{signOut()}}>Sign Out</button>\r\n        </div>\r\n      }\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default withRouter(NavBar);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nclass Questions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: null\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const questions = (await axios.get(\"/api/questions\")).data; //https://tourmapper-backend.herokuapp.com\r\n    this.setState({\r\n      questions\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n            <Link to=\"/new-question\">\r\n            <div className=\"card text-white bg-secondary mb-3\">\r\n                <div className=\"card-header\">Nee help? Ask here!</div>\r\n                <div className=\"card-body\">\r\n                    <h4 className=\"card-title\">+ New Question</h4>\r\n                    <p className=\"card-text\">Don't worry, help is on the way!</p>\r\n                </div>\r\n            </div>\r\n            </Link>\r\n          {this.state.questions === null && <p>Loading tours...</p>}\r\n          {this.state.questions &&\r\n            this.state.questions.map(question => (\r\n              <div key={question.id} className=\"col-sm-12 col-md-4 col-lg-3\">\r\n                <Link to={`/question/${question.id}`}>\r\n                  <div className=\"card text-white bg-success mb-3\">\r\n                    <div className=\"card-header\">\r\n                      Answers: {question.answers}\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <h4 className=\"card-title\">{question.title}</h4>\r\n                      <p className=\"card-text\">{question.description}</p>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Questions;\r\n","import React, {Component, Fragment} from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nimport auth0Client from '../Auth'\r\n\r\nclass SubmitAnswer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            answer: '',\r\n        }; \r\n    }\r\n\r\n    updateAnswer(value){\r\n        this.setState({\r\n            answer: value,\r\n        });\r\n    }\r\n\r\n    submit(){\r\n        this.props.submitAnswer(this.state.answer);\r\n\r\n        this.setState({\r\n            answer: '',\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(!auth0Client.isAuthenticated()) return null; \r\n        return (\r\n            <Fragment>\r\n                <div className=\"form-group text-center\">\r\n                    <label htmlFor=\"answer\">Answer:</label>\r\n                    <input \r\n                        type = \"text\"\r\n                        id = \"answer\"\r\n                        onChange={(e) => {this.updateAnswer(e.target.value)}}\r\n                        className=\"form-control\"\r\n                        placeholder = \"Share your answer.\"\r\n                        value={this.state.answer}\r\n                        />\r\n                </div>\r\n                <button \r\n                    className=\"btn btn-primary\"\r\n                    onClick = { ()=> { this.submit()} }>\r\n                    Submit \r\n                    </button>\r\n                    <hr className=\"my-4\"/>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(SubmitAnswer);","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport SubmitAnswer from './SubmitAnswer'\r\nimport auth0Client from '../Auth'\r\n\r\nclass Question extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      question: null\r\n    };\r\n\r\n    this.submitAnswer = this.submitAnswer.bind(this); \r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.refreshQuestion(); \r\n  }\r\n\r\n  async refreshQuestion(){\r\n    const {\r\n      match: { params }\r\n    } = this.props;\r\n    const question = (await axios.get(\r\n      `http://localhost:8081/api/question/${params.questionId}` // `https://tourmapper-backend.herokuapp.com/${params.questionId}`\r\n    )).data;\r\n    this.setState({\r\n      question\r\n    });\r\n  }\r\n\r\n  async submitAnswer(answer){\r\n      await axios.post(`http://localhost:8081/api/questions/answer/${this.state.question._id}`, // `https://tourmapper-backend.herokuapp.com/answer/${this.state.question._id}`\r\n      {\r\n          answer,\r\n      }, {\r\n          headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\r\n      });\r\n\r\n      await this.refreshQuestion(); \r\n  }\r\n\r\n  render() {\r\n    const { question } = this.state;\r\n    if (question === null) return <p>Loading...</p>;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"jumbotron col-12\">\r\n            <h1 className=\"display-3\">{question.title}</h1>\r\n            <p className=\"lead\">{question.description}</p>\r\n            <hr className=\"my-4\" />\r\n            <SubmitAnswer questionId={question.id} submitAnswer={this.submitAnswer}/>\r\n            <p>Answers:</p>\r\n            {question.answers.map((answer, idx) => (\r\n              <p className=\"lead\" key={idx}>\r\n                {answer.answer}\r\n              </p>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Question;\r\n","import React, {Component} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport auth0Client from './Auth'\r\n\r\nclass Callback extends Component {\r\n    async componentDidMount(){\r\n        await auth0Client.handleAuthentication(); \r\n        this.props.history.replace('/'); \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <p>Loading profile ...</p>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Callback)","import React from 'react';\r\nimport { Route } from 'react-router-dom'\r\nimport auth0Client from '../Auth'\r\n\r\nfunction SecuredRoute(props){\r\n    const {component: Component, path, checkingSession} = props; \r\n    return (\r\n        <Route path={path} render={()=>{\r\n            // Check if token is saved \r\n            if (checkingSession) return <h3 className=\"text-center\">Validating session...</h3>\r\n\r\n            // Check if user is authenticated before showing page\r\n            if (!auth0Client.isAuthenticated()){\r\n                auth0Client.signIn(); \r\n                return <div></div>\r\n            }\r\n            return <Component/>\r\n            }} />\r\n    );\r\n}\r\n\r\nexport default SecuredRoute; ","import React, {Component} from 'react'; \r\nimport {withRouter} from 'react-router-dom'\r\nimport auth0Client from \"../Auth\"\r\nimport axios from 'axios'\r\n\r\nclass NewQuestion extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            disabled: false, \r\n            title: '', \r\n            description: '',\r\n        }\r\n    }\r\n\r\n    updateDescription(value){\r\n        this.setState({\r\n            description: value,\r\n        });\r\n    }\r\n\r\n    updateTitle(value){\r\n        this.setState({\r\n            title:value,\r\n        });\r\n    }\r\n\r\n    async submit(){\r\n        this.setState({\r\n            disabled:true\r\n        })\r\n        \r\n        await axios.post('http://localhost:8081/api/newquestion', { // https://tourmapper-backend.herokuapp.com/\r\n            title: this.state.title, \r\n            description: this.state.description,\r\n        }, {\r\n            headers: { 'Authorization': `Bearer ${auth0Client.getIdToken()}`}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"card border-primary\">\r\n                            <div className=\"card-body text-left\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleInputEmail1\">Title:</label>\r\n                                    <input \r\n                                        disabled={this.state.disabled}\r\n                                        type=\"text\" onBlur={(e)=>{this.updateTitle(e.target.value)}} // TOCHECK Can I not have brackes around func\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Give your question a title\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleInputEmail1\">Description:</label>\r\n                                    <input \r\n                                        disabled={this.state.disabled}\r\n                                        type=\"text\"\r\n                                        onBlur={(e)=>{this.updateDescription(e.target.value)}}\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Give more context to your question.\"\r\n                                    />\r\n                                </div>\r\n                                <button \r\n                                    disabled={this.state.disabled}\r\n                                    className=\"btn btn-primary\"\r\n                                    onClick={()=>{this.submit()}}>\r\n                                        Submit\r\n                                    </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(NewQuestion)","import React, { Component } from 'react';\nimport { Route, withRouter } from 'react-router-dom'\nimport './App.css';\nimport NavBar from \"./NavBar/NavBar\"\nimport Questions from './Questions/Questions';\nimport Question from './Question/Question';\nimport Callback from './Callback'\nimport SecuredRoute from './SecuredRoute/SecuredRoute';\nimport NewQuestion from './NewQuestion/NewQuestion';\nimport auth0Client from './Auth';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props); \n\n    this.state = {\n      checkingSession:true, \n    }\n  }\n\n  async componentDidMount(){\n    // This is only reached when user is authenticating \n    if (this.props.location.pathname === '/callback') {\n      this.setState({\n        checkingSession: false, \n      });\n      return;\n    }\n    // Try to authenticate on refresh \n    try {\n      await auth0Client.silentAuth(); \n      this.forceUpdate(); \n    } catch (err){\n      if (err.error !== 'login_required') console.log(err.error); \n    }\n    \n    this.setState({\n      checkingSession: false,\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar/>\n        <Route exact path='/' component={Questions}/>\n        <Route exact path='/question/:questionId' component={Question}/>\n        <Route exact path='/callback' component={Callback}/>\n        <SecuredRoute path='/new-question' checkingSession={this.state.checkingSession} component={NewQuestion}/>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}